/* 
    2D Transform
    - scaleX, scaleY, scale()
    - rotate() => deg, rad, grad, turn (360deg = 6.28rad = 400grad = 1turn)
    - translate(x, y)
    - skew( skewX, skewY )
    - matrix( scaleX, skewY, skewX, scaleY, translateX, translateY )

    transform-origin(X, Y, Z)
    Default Values => 50% 50% 0
    X-Axis
    - CSS Unit [px, em, rem]
    - %
    - Keyword
    -- Left = 0%
    -- Center = 50%
    -- Right = 100%
    Y-Axis
    - CSS Unit [px, em, rem]
    - %
    - Keyword
    -- Top = 0%
    -- Center = 50%
    -- Bottom = 100%

    3D Transform
    - rotate3d( rotateX, rotateY, rotateZ, deg ) => (0, 0, 1, 30deg)

    - translate3d(X, Y, Z)
    [on parent]
    => perspective: length of Z-axis
    => perspective-origin

    - Backface-Visibility [visisble -> default | hidden -> after 90deg]
    - Transform-Style [flat -> default | perserve-3d]
*/

* {
    box-sizing: border-box;
    margin: 0;
}

body {
    font-family: Arial, Helvetica, sans-serif;
    background-color: #333333;
}

.container {
    margin: 40px auto;
    width: 200px;
    perspective: 600px;
}

.box {
    position: relative;
    width: 100%;
    height: 200px;
    transform-style: preserve-3d;
    transition: transform 1s 0.1s;
    transform-origin: left center;
}

.box:hover {
    -ms-transform: translateX(100%) rotateY(-180deg);
    transform: translateX(100%) rotateY(-180deg);
}

.box .face {
    position: absolute;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    font-weight: bold;
    font-size: 30px;
    color: #000;
    border-radius: 5px;
    backface-visibility: hidden;
}

.box .front {
    background-color: rgb(200, 255, 200);
}

.box .back {
    background-color: rgb(200, 250, 255);
    transform: rotateY(180deg);
}

/* Assign 1 */
.assign-1 {
    width: 150px;
    padding: 20px;
    margin: 60px auto;
    background-color: #FF5722;
    color: #fff;
    display: flex;
    justify-content: center;
    align-items: center;   
    position: relative;
}

.assign-1::before, .assign-1::after {
    content: "";
    width: 100%;
    height: 100%;
    background-color: #FF5722;
    position: absolute;
    z-index: -1;
}

.assign-1::before {
    transform: skew(10deg, 10deg);
}

.assign-1::after {
    transform: skew(-10deg, -10deg);
}

/* Assign 2 */
.assign-2 {
    width: 150px;
    padding: 20px 0;
    margin: 20px auto;
    background-color: #009688;
    color: #fff;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
}

.assign-2::before {
    content: "";
    width: 15px;
    height: 100%;
    background-color: #009688;
    position: absolute;
    top: 0;
    left: -35px;
    transform: skewX(20deg);
}

.assign-2::after {
    content: "";
    width: 28px;
    height: 100%;
    background-color: #009688;
    position: absolute;
    top: 0;
    left: -14px;
    transform: skewX(20deg);
}

/* Assign 3 */
.assign-3 {
    width: 200px;
    height: 200px;
    margin: 150px auto;
    background-color: #607D8B;
    border-bottom: 5px solid #000;
    position: relative;
}

.assign-3::before {
    content: "Elzero";
    color: #fff;
    position: absolute;
    bottom: 10px;
    left: 10px;
}

.assign-3::after {
    content: "";
    width: 100px;
    height: 100px;
    background-color: #000;
    border-right: 3px solid #333;
    border-bottom: 3px solid #333;
    position: absolute;
    top: -51px;
    left: 49px;
    transform: rotate(45deg) scale(1.38);
}